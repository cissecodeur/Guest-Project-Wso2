<?xml version="1.0" encoding="UTF-8"?>
<api context="/user/management/v1" name="user-managementAPI" version="1.0" version-type="context" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" uri-template="/searchByUsermame">
        <inSequence>
            <!-- stockage du payload dans une variable -->
            <property description="payload" expression="json-eval($)" name="payload" scope="default" type="STRING"/>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property expression="json-eval($)" name="requete_entrante"/>
            </log>
            <payloadFactory description="requete backend" media-type="json">
                <format>
					{
					"schemas": [
					"urn:ietf:params:scim:api:messages:2.0:SearchRequest"
					],
					"attributes": [
					"name",
					"userName",
					"phoneNumbers",
					"emails",
					"groups"
					],
					"filter": "userName eq $1",
					"domain": "PRIMARY",
					"startIndex": 1,
					"count": 100

					}
				</format>
                <args>
                    <arg evaluator="json" expression="$.username"/>
                </args>
            </payloadFactory>
            <log level="custom" separator="------">
                <property name="state" value="REQUEST"/>
                <property expression="json-eval($)" name="requete_backend"/>
            </log>
            <header description="Authorization" name="Authorization" scope="transport" value="Basic YWRtaW46YWRtaW4="/>
            <call>
                <endpoint key="userManagementSearchEP"/>
            </call>
            <property name="ContentType" scope="axis2" type="STRING" value="application/json"/>
            <log level="custom" separator="------">
                <property name="state" value="FINISH"/>
                <property expression="json-eval($)" name="response_backend"/>
            </log>
            <!-- remettre la requete initiale -->
            <payloadFactory description="requete backend" media-type="json">
                <format>
					$1
				</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:payload"/>
                </args>
            </payloadFactory>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/searchByUsermameV2">
        <inSequence>
            <!-- stockage du payload dans une variable -->
            <enrich description="sauvegarde du payload">
                <source clone="false" type="body"/>
                <target property="payload_save" type="property"/>
            </enrich>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property expression="json-eval($)" name="requete_entrante"/>
            </log>
            <payloadFactory description="requete backend" media-type="json">
                <format>
					{
					"schemas": [
					"urn:ietf:params:scim:api:messages:2.0:SearchRequest"
					],
					"attributes": [
					"name",
					"userName",
					"phoneNumbers",
					"emails",
					"groups"
					],
					"filter": "userName eq $1",
					"domain": "PRIMARY",
					"startIndex": 1,
					"count": 100

					}
				</format>
                <args>
                    <arg evaluator="json" expression="$.username"/>
                </args>
            </payloadFactory>
            <log level="custom" separator="------">
                <property name="state" value="REQUEST"/>
                <property expression="json-eval($)" name="requete_backend"/>
            </log>
            <header description="Authorization" name="Authorization" scope="transport" value="Basic YWRtaW46YWRtaW4="/>
            <call>
                <endpoint key="userManagementSearchEP"/>
            </call>
            <property name="ContentType" scope="axis2" type="STRING" value="application/json"/>
            <log level="custom" separator="------">
                <property name="state" value="FINISH"/>
                <property expression="json-eval($)" name="response_backend"/>
            </log>
            <!-- remettre la requete initiale -->
            <payloadFactory description="requete backend" media-type="json">
                <format>
					$1
				</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:payload_save"/>
                </args>
            </payloadFactory>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/searchByUsermameV3">
        <inSequence>
            <!-- stockage du payload dans une variable -->
            <enrich description="sauvegarde du payload">
                <source clone="false" type="body"/>
                <target property="payload_save" type="property"/>
            </enrich>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property expression="json-eval($)" name="requete_entrante"/>
            </log>
            <payloadFactory description="requete backend" media-type="json">
                <format>
					{
					"schemas": [
					"urn:ietf:params:scim:api:messages:2.0:SearchRequest"
					],
					"attributes": [
					"name",
					"userName",
					"phoneNumbers",
					"emails",
					"groups"
					],
					"filter": "userName eq $1",
					"domain": "PRIMARY",
					"startIndex": 1,
					"count": 100

					}
				</format>
                <args>
                    <arg evaluator="json" expression="$.username"/>
                </args>
            </payloadFactory>
            <log level="custom" separator="------">
                <property name="state" value="REQUEST"/>
                <property expression="json-eval($)" name="requete_backend"/>
            </log>
            <header description="Authorization" name="Authorization" scope="transport" value="Basic YWRtaW46YWRtaW4="/>
            <call>
                <endpoint key="userManagementSearchEP"/>
            </call>
            <property name="ContentType" scope="axis2" type="STRING" value="application/json"/>
            <log level="custom" separator="------">
                <property name="state" value="FINISH"/>
                <property expression="json-eval($)" name="response_backend"/>
            </log>
            <!-- remettre la requete initiale -->
            <enrich description="rappel du payload">
                <source clone="false" property="payload_save" type="property"/>
                <target type="body"/>
            </enrich>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/searchByUsermameV4">
        <inSequence>
            <!-- stockage du payload dans une variable -->
            <enrich description="sauvegarde du payload">
                <source clone="false" type="body"/>
                <target property="payload_save" type="property"/>
            </enrich>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property expression="json-eval($)" name="requete_entrante"/>
            </log>
            <log level="custom" separator="------">
                <property name="state" value="FINISH"/>
                <property expression="json-eval($)" name="response_backend"/>
            </log>
            <!-- remettre la requete initiale -->
            <sequence key="backend-call-api-logic-SE"/>
            <enrich description="rappel du payload">
                <source clone="false" property="payload_save" type="property"/>
                <target type="body"/>
            </enrich>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/searchByUsermameV5">
        <inSequence>
            <!-- stockage du payload dans une variable -->
            <enrich description="sauvegarde du payload">
                <source clone="false" type="body"/>
                <target property="payload_save" type="property"/>
            </enrich>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property name="enrichnumber" value="1"/>
                <property expression="json-eval($)" name="requete_entrante"/>
            </log>
            <!-- remettre la requete initiale -->
            <sequence key="backend-call-api-logic-SE"/>
            <log level="custom" separator="------">
                <property name="state" value="PROCESS"/>
                <property name="enrichnumber" value="2"/>
                <property expression="json-eval($)" name="backend_response"/>
            </log>
            <enrich description="sauvegarde de la response du backend">
                <source clone="false" type="body"/>
                <target property="bachend_respond" type="property"/>
            </enrich>
            <log level="custom" separator="------">
                <property name="state" value="PROCESS"/>
                <property name="enrichnumber" value="3"/>
                <property expression="json-eval($)" name="backend_response"/>
            </log>
            <enrich description="rappel du payload">
                <source clone="false" property="payload_save" type="property"/>
                <target type="body"/>
            </enrich>
            <log level="custom" separator="------">
                <property name="state" value="PROCESS"/>
                <property name="enrichnumber" value="4"/>
                <property expression="json-eval($)" name="requÃªte"/>
            </log>
            <enrich description="rappel de la reponse du backend">
                <source clone="false" property="bachend_respond" type="property"/>
                <target type="body"/>
            </enrich>
            <log level="custom" separator="------">
                <property name="state" value="FINISH"/>
                <property name="enrichnumber" value="5"/>
                <property expression="json-eval($)" name="response_backend"/>
            </log>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/searchByUsermameV6">
        <inSequence>
            <!-- stockage du payload dans une variable -->
            <script description="pyaload verfication script" language="js"><![CDATA[var log = mc.getServiceLog();
log.info(" ---- begin script ---- ");
payload = mc.getPayloadJSON();

log.info(payload);
log.info(" ---- end script ---- ");]]></script>
            <enrich description="sauvegarde du payload">
                <source clone="false" type="body"/>
                <target property="payload_save" type="property"/>
            </enrich>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property expression="json-eval($)" name="requete_entrante"/>
            </log>
            <log level="custom" separator="------">
                <property name="state" value="FINISH"/>
                <property expression="json-eval($)" name="response_backend"/>
            </log>
            <!-- remettre la requete initiale -->
            <sequence key="backend-call-api-logic-SE"/>
            <enrich description="rappel du payload">
                <source clone="false" property="payload_save" type="property"/>
                <target type="body"/>
            </enrich>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/searchByUsermameV7">
        <inSequence>
            <property expression="json-eval($.matricule)" name="matricule" scope="default" type="STRING"/>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property expression="json-eval($)" name="requete_entrante"/>
                <property expression="json-eval($.matricule)" name="matriculeUtilisateur"/>
            </log>
            <dblookup>
                <connection>
                    <pool>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://localhost:3306/WSO2GUEST_DB</url>
                        <user>cisse</user>
                        <password>root123</password>
                    </pool>
                </connection>
                <statement>
                    <sql><![CDATA[SELECT  customerName , city FROM customers WHERE customerNumber=?]]></sql>
                    <parameter expression="$ctx:matricule" type="VARCHAR"/>
                    <result column="city" name="ville"/>
                    <result column="customerName" name="nom"/>
                </statement>
            </dblookup>
            <log level="custom" separator="------">
                <property name="state" value="RESULT QUERY"/>
                <property expression="//." name="PAYLOAD"/>
                <property expression="$ctx:nom" name="nom"/>
                <property expression="$ctx:ville" name="ville"/>
            </log>
            <payloadFactory description="ResultResponse" media-type="json">
                <format>
					{
					"hasError": false,
					"items": [
					{
					"nom": "$1",
					"ville": "$2"
					}
					],
					"status" :{
					"code" : 200,
					"message" : "Vous avez ete recuperÃ©(e) Mr/Mme $1 , dans la ville $2 ."

					}
					}
				</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:nom"/>
                    <arg evaluator="xml" expression="$ctx:ville"/>
                </args>
            </payloadFactory>
            <respond description="Reponse"/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/insertEmployee">
        <inSequence>
            <propertyGroup>
                <property expression="json-eval($.matricule)" name="matricule" scope="default" type="INTEGER"/>
                <property expression="json-eval($.nom)" name="nom" scope="default" type="STRING"/>
                <property expression="json-eval($.prenoms)" name="prenoms" scope="default" type="STRING"/>
                <property expression="json-eval($.extension)" name="extension" scope="default" type="STRING"/>
                <property expression="json-eval($.email)" name="email" scope="default" type="STRING"/>
                <property expression="json-eval($.code)" name="code" scope="default" type="STRING"/>
                <property expression="json-eval($.report)" name="report" scope="default" type="INTEGER"/>
                <property expression="json-eval($.poste)" name="poste" scope="default" type="STRING"/>
            </propertyGroup>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property expression="json-eval($)" name="requete_entrante"/>
                <property expression="json-eval($.matricule)" name="matriculeUtilisateur"/>
                <property expression="$ctx:poste" name="poste"/>
            </log>
            <dbreport>
                <connection>
                    <pool>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://localhost:3306/WSO2GUEST_DB</url>
                        <user>cisse</user>
                        <password>root123</password>
                    </pool>
                </connection>
                <statement>
                    <sql><![CDATA[INSERT INTO  employees (employeeNumber,lastName,firstName,extension,email,officeCode,reportsTo,jobTitle ) VALUES (?,?,?,?,?,?,?,?)]]></sql>
                    <parameter expression="$ctx:matricule" type="INTEGER"/>
                    <parameter expression="$ctx:nom" type="VARCHAR"/>
                    <parameter expression="$ctx:prenoms" type="VARCHAR"/>
                    <parameter expression="$ctx:extension" type="VARCHAR"/>
                    <parameter expression="$ctx:email" type="VARCHAR"/>
                    <parameter expression="$ctx:code" type="VARCHAR"/>
                    <parameter expression="$ctx:report" type="INTEGER"/>
                    <parameter expression="$ctx:poste" type="VARCHAR"/>
                </statement>
            </dbreport>
            <dblookup>
                <connection>
                    <pool>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://localhost:3306/WSO2GUEST_DB</url>
                        <user>cisse</user>
                        <password>root123</password>
                    </pool>
                </connection>
                <statement>
                    <sql><![CDATA[SELECT  lastName , firstName , email , jobTitle FROM employees WHERE employeeNumber=?]]></sql>
                    <parameter expression="$ctx:matricule" type="INTEGER"/>
                    <result column="email" name="emailReturn"/>
                    <result column="jobTitle" name="posteReturn"/>
                    <result column="lastName" name="nomReturn"/>
                    <result column="firstName" name="prenomsReturn"/>
                </statement>
            </dblookup>
            <switch source="$ctx:nomReturn">
                <case regex="">
                    <payloadFactory description="ResultResponse" media-type="json">
                        <format>
							{
							"hasError": true,
							"status" :{
							"code" : 900,
							"message" : "Votre inscription a echouÃ©e Mr/Mme $1 $2 ."

							    }
							}
						</format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:nom"/>
                            <arg evaluator="xml" expression="$ctx:prenoms"/>
                        </args>
                    </payloadFactory>
                </case>
                <default>
                    <payloadFactory description="ResultResponse" media-type="json">
                        <format>
							{
							"hasError": false,
							"items": [
							{
							"nom"    : "$1",
							"prenoms": "$2",
							"email"  : "$3",
							"poste"  : "$4"
							}
							],
							"status" :{
							"code" : 200,
							"message" : "Votre inscription  a ete effectuÃ©e  avec succes Mr/Mme $1 $2 ."

							}
							}
						</format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:nomReturn"/>
                            <arg evaluator="xml" expression="$ctx:prenomsReturn"/>
                            <arg evaluator="xml" expression="$ctx:emailReturn"/>
                            <arg evaluator="xml" expression="$ctx:posteReturn"/>
                        </args>
                    </payloadFactory>
                </default>
            </switch>
            <log level="custom" separator="------">
                <property name="state" value="RESULT QUERY"/>
                <property expression="//." name="PAYLOAD"/>
                <property expression="$ctx:nom" name="nom"/>
                <property expression="$ctx:prenoms" name="prenoms"/>
            </log>
            <respond description="Reponse"/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/insertPayment">
        <inSequence>
            <propertyGroup>
                <property expression="json-eval($.matricule)" name="matricule" scope="default" type="INTEGER"/>
                <property expression="json-eval($.codeVerification)" name="codeVerification" scope="default" type="STRING"/>
                <property expression="json-eval($.date)" name="date" scope="default" type="STRING"/>
                <property expression="json-eval($.montant)" name="montant" scope="default" type="DOUBLE"/>
                <property expression="json-eval($.statut)" name="statut" scope="default" type="STRING"/>
            </propertyGroup>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property expression="json-eval($)" name="requete_entrante"/>
                <property expression="json-eval($.matricule)" name="matriculeUtilisateur"/>
                <property expression="$ctx:statut" name="statut"/>
            </log>
            <dbreport>
                <connection>
                    <pool>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://localhost:3306/WSO2GUEST_DB</url>
                        <user>cisse</user>
                        <password>root123</password>
                    </pool>
                </connection>
                <statement>
                    <sql><![CDATA[INSERT INTO  payments (customerNumber,checkNumber,paymentDate,amount,status) VALUES (?,?,?,?,?)]]></sql>
                    <parameter expression="$ctx:matricule" type="INTEGER"/>
                    <parameter expression="$ctx:codeVerification" type="VARCHAR"/>
                    <parameter expression="$ctx:date" type="VARCHAR"/>
                    <parameter expression="$ctx:montant" type="VARCHAR"/>
                    <parameter expression="$ctx:statut" type="VARCHAR"/>
                </statement>
            </dbreport>
            <dblookup>
                <connection>
                    <pool>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://localhost:3306/WSO2GUEST_DB</url>
                        <user>cisse</user>
                        <password>root123</password>
                    </pool>
                </connection>
                <statement>
                    <sql><![CDATA[SELECT  paymentDate , amount , status  FROM payments WHERE customerNumber=?]]></sql>
                    <parameter expression="$ctx:matricule" type="INTEGER"/>
                    <result column="status" name="statutReturn"/>
                    <result column="paymentDate" name="dateReturn"/>
                    <result column="amount" name="montantReturn"/>
                </statement>
            </dblookup>
            <switch source="$ctx:montantReturn">
                <case regex="">
                    <payloadFactory description="ResultResponse" media-type="json">
                        <format>
							{
							"hasError": true,
							"status" :{
							"code" : 400,
							"message" : "Votre paiement de $1 a echouÃ©e a la date $2 ."

							    }
							}
						</format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:montant"/>
                            <arg evaluator="xml" expression="$ctx:date"/>
                        </args>
                    </payloadFactory>
                </case>
                <default>
                    <payloadFactory description="ResultResponse" media-type="json">
                        <format>
							{
							"hasError": false,
							"items": [
							{
							"code"    : "$1",
							"date"    : "$2",
							"montant" : "$3",
							"statut"  : "$4"
							}
							],
							"status" :{
							"code" : 200,
							"message" : "Votre payment de $3 a ete effectuÃ©e avec succes , votre code de paiement est $1 ."

							}
							}
						</format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:codeReturn"/>
                            <arg evaluator="xml" expression="$ctx:dateReturn"/>
                            <arg evaluator="xml" expression="$ctx:montantReturn"/>
                            <arg evaluator="xml" expression="$ctx:statutReturn"/>
                        </args>
                    </payloadFactory>
                </default>
            </switch>
            <log level="custom" separator="------">
                <property name="state" value="RESULT QUERY"/>
                <property expression="//." name="PAYLOAD"/>
                <property expression="$ctx:montant" name="montant"/>
                <property expression="$ctx:date" name="date"/>
            </log>
            <respond description="Reponse"/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <payloadFactory description="ErrorHandler" media-type="json">
                <format>
							{
							"hasError": true,
							"status" :{
							"code" : 400,
							"codeProcess" : $3,
							"message" : "Votre paymentde $1 a echouÃ©e a la date $2 ."
							"messageProcess" : "$4",
							"messageDetailsProcess" : "$5"

							    }
							}
						</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:montant"/>
                    <arg evaluator="xml" expression="$ctx:date"/>
                    <arg evaluator="xml" expression="$ctx:ERROR_CODE"/>
                    <arg evaluator="xml" expression="$ctx:ERROR_MESSAGE"/>
                    <arg evaluator="xml" expression="$ctx:ERROR_DETAIL"/>
                </args>
            </payloadFactory>
            <property description="application/json" name="ContentType" scope="axis2" type="STRING" value="application/json"/>
            <property description="Code erreur HTTP" name="HTTP_SC" scope="axis2" type="STRING" value="400"/>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="POST" uri-template="/insertPaymentV2">
        <inSequence>
            <propertyGroup>
                <property expression="json-eval($.matricule)" name="matricule" scope="default" type="INTEGER"/>
                <property expression="json-eval($.codeVerification)" name="codeVerification" scope="default" type="STRING"/>
                <property expression="json-eval($.date)" name="date" scope="default" type="STRING"/>
                <property expression="json-eval($.montant)" name="montant" scope="default" type="DOUBLE"/>
                <property expression="json-eval($.statut)" name="statut" scope="default" type="STRING"/>
            </propertyGroup>
            <log level="custom" separator="------">
                <property name="state" value="BEGIN"/>
                <property expression="json-eval($)" name="requete_entrante"/>
                <property expression="json-eval($.matricule)" name="matriculeUtilisateur"/>
                <property expression="$ctx:statut" name="statut"/>
            </log>
            <dbreport>
                <connection>
                    <pool>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://localhost:3306/WSO2GUEST_DB</url>
                        <user>cisse</user>
                        <password>root123</password>
                    </pool>
                </connection>
                <statement>
                    <sql><![CDATA[INSERT INTO  payments (customerNumber,checkNumber,paymentDate,amount,status) VALUES (?,?,?,?,?)]]></sql>
                    <parameter expression="$ctx:matricule" type="INTEGER"/>
                    <parameter expression="$ctx:codeVerification" type="VARCHAR"/>
                    <parameter expression="$ctx:date" type="VARCHAR"/>
                    <parameter expression="$ctx:montant" type="VARCHAR"/>
                    <parameter expression="$ctx:statut" type="VARCHAR"/>
                </statement>
            </dbreport>
            <dblookup>
                <connection>
                    <pool>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://localhost:3306/WSO2GUEST_DB</url>
                        <user>cisse</user>
                        <password>root123</password>
                    </pool>
                </connection>
                <statement>
                    <sql><![CDATA[SELECT  paymentDate , amount , status  FROM payments WHERE customerNumber=?]]></sql>
                    <parameter expression="$ctx:matricule" type="INTEGER"/>
                    <result column="status" name="statutReturn"/>
                    <result column="paymentDate" name="dateReturn"/>
                    <result column="amount" name="montantReturn"/>
                </statement>
            </dblookup>
            <switch source="$ctx:montantReturn">
                <case regex="">
                    <payloadFactory description="ResultResponse" media-type="json">
                        <format>
							{
							"hasError": true,
							"status" :{
							"code" : 400,
							"message" : "Votre paiement de $1 a echouÃ©e a la date $2 ."

							    }
							}
						</format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:montant"/>
                            <arg evaluator="xml" expression="$ctx:date"/>
                        </args>
                    </payloadFactory>
                </case>
                <default>
                    <payloadFactory description="ResultResponse" media-type="json">
                        <format>
							{
							"hasError": false,
							"items": [
							{
							"code"    : "$1",
							"date"    : "$2",
							"montant" : "$3",
							"statut"  : "$4"
							}
							],
							"status" :{
							"code" : 200,
							"message" : "Votre payment de $3 a ete effectuÃ©e avec succes , votre code de paiement est $1 ."

							}
							}
						</format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:codeReturn"/>
                            <arg evaluator="xml" expression="$ctx:dateReturn"/>
                            <arg evaluator="xml" expression="$ctx:montantReturn"/>
                            <arg evaluator="xml" expression="$ctx:statutReturn"/>
                        </args>
                    </payloadFactory>
                </default>
            </switch>
            <filter regex=".*bearer" source="get-property('Postman-Token')">
                <then>
                    <log level="custom" separator="-----------">
                        <property name="service" value=" Le token est de postman "/>
                    </log>
                </then>
                <else>
                    <log level="custom" separator="--------">
                        <property name="service" value="Appels d'un autre token"/>
                    </log>
                </else>
            </filter>
            <log level="custom" separator="------">
                <property name="state" value="RESULT QUERY"/>
                <property expression="//." name="PAYLOAD"/>
                <property expression="$ctx:montant" name="montant"/>
                <property expression="$ctx:date" name="date"/>
            </log>
            <respond description="Reponse"/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <payloadFactory description="ErrorHandler" media-type="json">
                <format>
							{
							"hasError": true,
							"status" :
							 {
							   "code" : 400,
							    "codeProcess" : $3,
							    "message" : "Votre payment de $1 a echouÃ©e a la date $2 ."
							    "messageProcess" : "$4",
							    "messageDetailsProcess" : "$5"

							    }
							}
						</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:montant"/>
                    <arg evaluator="xml" expression="$ctx:date"/>
                    <arg evaluator="xml" expression="$ctx:ERROR_CODE"/>
                    <arg evaluator="xml" expression="$ctx:ERROR_MESSAGE"/>
                    <arg evaluator="xml" expression="$ctx:ERROR_DETAIL"/>
                </args>
            </payloadFactory>
            <property description="application/json" name="ContentType" scope="axis2" type="STRING" value="application/json"/>
            <property description="Code erreur HTTP" name="disableAddressingForOutMessages" scope="axis2" type="STRING" value="400"/>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="POST" uri-template="/customerRegister">
        <inSequence>
            <!-- logic de  verification des differents inputs -->
            <property name="requiredsFieldsProperty" scope="default" type="STRING" value="matricule,username,nom,prenom,telephone,adresse1,adresse2,ville,etat,codePostal,pays,matriculeEmploye,creditLimit,montant"/>
            <!-- stockage du payload dans une variable -->
            <sequence key="local-verification-required-json-field-SE"/>
            <propertyGroup>
                <property expression="json-eval($.matricule)" name="matricule" scope="default" type="STRING"/>
                <property expression="json-eval($.username)" name="username" scope="default" type="STRING"/>
                <property expression="json-eval($.nom)" name="nom" scope="default" type="STRING"/>
                <property expression="json-eval($.prenom)" name="prenoms" scope="default" type="STRING"/>
                <property expression="json-eval($.telephone)" name="telephone" scope="default" type="STRING"/>
                <property expression="json-eval($.adresse1)" name="adresse1" scope="default" type="STRING"/>
                <property expression="json-eval($.adresse2)" name="adresse2" scope="default" type="STRING"/>
                <property expression="json-eval($.ville)" name="ville" scope="default" type="STRING"/>
                <property expression="json-eval($.etat)" name="etat" scope="default" type="STRING"/>
                <property expression="json-eval($.codePostal)" name="codePostal" scope="default" type="STRING"/>
                <property expression="json-eval($.pays)" name="pays" scope="default" type="STRING"/>
                <property expression="json-eval($.matriculeEmploye)" name="matriculeEmploye" scope="default" type="STRING"/>
                <property expression="json-eval($.creditLimit)" name="creditLimit" scope="default" type="INTEGER"/>
                <property expression="json-eval($.montant)" name="montant" scope="default" type="INTEGER"/>
            </propertyGroup>
            <header description="content - type" name="Content-Type" scope="transport" value="application/json"/>
            <payloadFactory media-type="xml">
                <format>
                    <body xmlns="">
                        <p:insert_customers_operation xmlns:p="http://ws.wso2.org/dataservice">
                            <!--Exactly 1 occurrence-->
                            <xs:customerNumber xmlns:xs="http://ws.wso2.org/dataservice">$1</xs:customerNumber>
                            <!--Exactly 1 occurrence-->
                            <xs:customerName xmlns:xs="http://ws.wso2.org/dataservice">$2</xs:customerName>
                            <!--Exactly 1 occurrence-->
                            <xs:contactLastName xmlns:xs="http://ws.wso2.org/dataservice">$3</xs:contactLastName>
                            <!--Exactly 1 occurrence-->
                            <xs:contactFirstName xmlns:xs="http://ws.wso2.org/dataservice">$4</xs:contactFirstName>
                            <!--Exactly 1 occurrence-->
                            <xs:phone xmlns:xs="http://ws.wso2.org/dataservice">$5</xs:phone>
                            <!--Exactly 1 occurrence-->
                            <xs:addressLine1 xmlns:xs="http://ws.wso2.org/dataservice">$6</xs:addressLine1>
                            <!--Exactly 1 occurrence-->
                            <xs:addressLine2 xmlns:xs="http://ws.wso2.org/dataservice">$7</xs:addressLine2>
                            <!--Exactly 1 occurrence-->
                            <xs:city xmlns:xs="http://ws.wso2.org/dataservice">$8</xs:city>
                            <!--Exactly 1 occurrence-->
                            <xs:state xmlns:xs="http://ws.wso2.org/dataservice">$9</xs:state>
                            <!--Exactly 1 occurrence-->
                            <xs:postalCode xmlns:xs="http://ws.wso2.org/dataservice">$10</xs:postalCode>
                            <!--Exactly 1 occurrence-->
                            <xs:country xmlns:xs="http://ws.wso2.org/dataservice">$11</xs:country>
                            <!--Exactly 1 occurrence-->
                            <xs:salesRepEmployeeNumber xmlns:xs="http://ws.wso2.org/dataservice">$12</xs:salesRepEmployeeNumber>
                            <!--Exactly 1 occurrence-->
                            <xs:creditLimit xmlns:xs="http://ws.wso2.org/dataservice">$13</xs:creditLimit>
                        </p:insert_customers_operation>
                    </body>
                </format>
                <args>
                    <arg evaluator="xml" expression="$ctx:matricule"/>
                    <arg evaluator="xml" expression="$ctx:username"/>
                    <arg evaluator="xml" expression="$ctx:nom"/>
                    <arg evaluator="xml" expression="$ctx:prenom"/>
                    <arg evaluator="xml" expression="$ctx:telephone"/>
                    <arg evaluator="xml" expression="$ctx:adresse1"/>
                    <arg evaluator="xml" expression="$ctx:adresse2"/>
                    <arg evaluator="xml" expression="$ctx:ville"/>
                    <arg evaluator="xml" expression="$ctx:etat"/>
                    <arg evaluator="xml" expression="$ctx:codePostal"/>
                    <arg evaluator="xml" expression="$ctx:pays"/>
                    <arg evaluator="xml" expression="$ctx:matriculeEmploye"/>
                    <arg evaluator="xml" expression="$ctx:creditLimit"/>
                </args>
            </payloadFactory>
            <call>
                <endpoint key="insert_customers_EP"/>
            </call>
            <log level="full" separator="-----">
                <property name="state" value="------- insertion terminÃ©e --------"/>
            </log>
            <payloadFactory media-type="xml">
                <format>
                    <body>
                        <p:select_with_key_customers_operation xmlns:p="http://ws.wso2.org/dataservice">
                            <!--Exactly 1 occurrence-->
                            <xs:customerNumber xmlns:xs="http://ws.wso2.org/dataservice">$1</xs:customerNumber>
                        </p:select_with_key_customers_operation>
                    </body>
                </format>
                <args>
                    <arg evaluator="xml" expression="$ctx:matricule"/>
                </args>
            </payloadFactory>
            <log level="custom" separator="----">
                <property expression="/." name="payload_de_recuperation"/>
            </log>
            <header description="content - type" name="Content-Type" scope="transport" value="application/xml"/>
            <call>
                <endpoint key="get_customers_by_matricule_EP"/>
            </call>
            <property name="ContentType" scope="axis2" type="STRING" value="application/json"/>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <payloadFactory description="Error_Handler" media-type="json">
                <format>
							{
							"hasError": true,
							"status" :
							 {
							    "code" : 400,
							    "codeProcess" : $4,
							    "message" : "Votre payment de $1 a echouÃ©e mr/mme $2 $3  ."
							    "messageProcess" : "$5",
							    "messageDetailsProcess" : "$6"

							    }
							}
						</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:montant"/>
                    <arg evaluator="xml" expression="$ctx:nom"/>
                    <arg evaluator="xml" expression="$ctx:prenom"/>
                    <arg evaluator="xml" expression="$ctx:ERROR_CODE"/>
                    <arg evaluator="xml" expression="$ctx:ERROR_MESSAGE"/>
                    <arg evaluator="xml" expression="$ctx:ERROR_DETAIL"/>
                </args>
            </payloadFactory>
            <property description="application/json" name="ContentType" scope="axis2" type="STRING" value="application/json"/>
            <property description="Code erreur HTTP" name="disableAddressingForOutMessages" scope="axis2" type="STRING" value="400"/>
            <respond/>
        </faultSequence>
    </resource>
</api>
