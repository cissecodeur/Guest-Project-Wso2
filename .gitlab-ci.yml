---

variables:
  ARCHIVE_DIR: build
  WAR_NAME: ${APP_NAME}.car
  SRC_DIR: "src"
  TARGET_DIR: ${CI_PROJECT_DIR}/${SRC_DIR}/target
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

cache:
  paths:
    - .m2/repository

stages:
  - build
  - analysis
  - deploy

before_script:
  - if [[ "$CI_COMMIT_REF_NAME" =~ ^dev-.*$ ]]; then ENV=development; fi
  - if [[ "$CI_COMMIT_REF_NAME" =~ ^stg-.*$ ]]; then ENV=staging; fi
  - if [[ "$CI_COMMIT_REF_NAME" =~ ^prod-.*$ ]]; then ENV=production; fi
 
build:
  stage: build
  image: maven:3-jdk-8
  tags:
    - java
  script:
    - cd ${SRC_DIR}
    - mvn $MAVEN_CLI_OPTS clean install -Dspring.profiles.active=${ENV}
    - if [[ ! -r "target/${WAR_NAME}" ]]; then mv target/*.car target/${WAR_NAME}; fi
  environment:
    name: $ENV
  artifacts:
    paths:
      - ${TARGET_DIR}/*.war
    expire_in: 2d
  only:
    - /^(dev|stg|prod)-.*$/
  except:
    - branches

sonarqube:
  stage: analysis
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  tags:
    - sonarqube
  variables:
    SONAR_PROJECT_KEY: ${CI_PROJECT_NAME}
    SONAR_URL: http://sonarqube.ovh.smile.lan:9000
    SONAR_PROJECT_VERSION: ${CI_COMMIT_TAG}
    SONAR_LANGUAGE: java
  script:
      - cd ${SRC_DIR}
      - |
        if [[ ! -z ${SONAR_TOKEN+x} ]] && [[ ! -z  ${SONAR_TOKEN} ]];
        then
            sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.sourceEncoding=utf-8  -Dsonar.sources=src/main/java/ -Dsonar.java.binaries=target/classes -Dsonar.java.source=1.8
        else
            echo "No SONAR_TOKEN set, job skipped" 
        fi
  only:
    - /^(dev|stg|prod)-.*$/
  except:
    - branches
    
deploy:
  stage: deploy
  tags:
    - ansible
  image: ansible/centos7-ansible
  script:
    - cd ansible
    - ansible-playbook -e target_dir=${TARGET_DIR} -e war_file=${WAR_NAME} deploy.yml -l $ENV
  environment:
    name: $ENV
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^prod-.*$/'  # Manually deploy if production
      when: manual
    - if: '$CI_COMMIT_REF_NAME =~ /^(dev|stg)-.*$/' # Automatic deploy if dev or staging
      when: on_success

